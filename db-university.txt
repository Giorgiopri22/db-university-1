1. Selezionare tutti gli insegnanti
SELECT * FROM `teachers` 
2.Selezionare tutti i referenti per ogni dipartimento
SELECT head_of_department 
FROM departments;
3.Selezionare tutti gli studenti il cui nome inizia per "E" (373)
SELECT * 
FROM `students` 
WHERE name LIKE 'E%';
4.Selezionare tutti gli studenti che si sono iscritti nel 2021 (734)
SELECT * FROM `students` 
WHERE YEAR(enrolment_date)= 2021
5.Selezionare tutti i corsi che non hanno un sito web (676)
SELECT *
FROM courses
WHERE website IS NULL;
6.Selezionare tutti gli insegnanti che hanno un numero di telefono(50)
SELECT *
FROM `teachers` 
WHERE phone 
7.Selezionare tutti gli appelli d'esame dei mesi di giugno e luglio 2020 (2634)
SELECT *
FROM exams
WHERE date >= '2020-06-01' AND date <= '2020-07-31';
8.Qual è il numero totale degli studenti iscritti? (5000)
SELECT *
FROM `students` 
WHERE enrolment_date;


------------------------------------------
1.Contare i corsi raggruppati per cfu
SELECT COUNT(id)
FROM `courses` 
GROUP by cfu;
2.Contare gli studenti raggruppati per anno di nascita
SELECT COUNT(id) 
FROM `students`
GROUP by date_of_birth;
3.Selezionare il voto più basso dato ad ogni appello d'esame
SELECT MIN(vote) AS VotoMinimo, exam_id
FROM `exam_student` 
GROUP BY exam_id;
4.Contare gli appelli d'esame del mese di luglio raggruppati per giorno
SELECT COUNT(id) as appello_luglio, DATE(date) 
FROM `exams` 
WHERE MONTH(date) =07 
GROUP by DATE(date);
-----------------------------------------
1.Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
SELECT students.name , degrees.name 
FROM `students` 
JOIN degrees
ON students.degree_id = degrees.id
WHERE degrees.name = 'Corso di Laurea in Economia'
2.Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di
Neuroscienze
SELECT * 
FROM `degrees`
JOIN departments
ON departments.id = 7
WHERE degrees.level = 'magistrale'
3.Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
SELECT * 
FROM courses
JOIN course_teacher
ON courses.id = course_teacher.course_id
WHERE course_teacher.teacher_id=44
4.Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome
SELECT students.registration_number, students.name, students.surname, degrees.name AS 'degree_course_name', degrees.address, departments.name AS         'department_name', departments.address
FROM students
JOIN degrees ON degrees.id = students.degree_id
JOIN departments ON departments.id = degrees.department_id
ORDER BY students.name ASC, students.surname ASC;
5.Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
SELECT degrees.id, degrees.name AS 'corsi di laurea', teachers.id, teachers.name, teachers.surname 
FROM degrees 
JOIN courses 
ON courses.degree_id = degrees.id 
JOIN course_teacher 
ON courses.id = course_teacher.course_id 
JOIN teachers 
ON teachers.id = course_teacher.teacher_id;
6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)
SELECT teachers.id , teachers.name , teachers.surname, departments.name
FROM teachers
JOIN course_teacher
ON teachers.id = course_teacher.teacher_id
JOIN courses
ON courses.id = course_teacher.course_id
JOIN degrees
ON degrees.id = courses.degree_id
JOIN departments
ON departments.id = degrees.department_id
WHERE departments.name = 'Dipartimento di Matematica'
7.7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18.
SELECT students.id, students.name, students.surname, exam_student.vote AS 'voto massimo'
FROM exam_student
JOIN students
ON students.id = exam_student.student_id
WHERE exam_student.vote >= 18
(mezzo bonus)